{"version":3,"sources":["context/AuthContext.tsx","components/ChatView.tsx","App.tsx","index.tsx"],"names":["AuthContext","React","createContext","isAuthenticated","a","saveToken","token","signOut","ChatView","useState","hubConnection","setHubConnection","userName","setUserName","mensajes","setMensajes","mensaje","setMensaje","useEffect","tmpArray","push","newHubConnection","SignalR","withUrl","build","on","name","console","log","start","catch","error","prompt","id","map","item","index","key","action","onSubmit","e","preventDefault","messageInput","target","elements","value","send","then","className","type","placeholder","required","App","setUserAuthenticated","authContext","useContext","checkSession","ReactDOM","render","props","isAuthenticatedProvider","window","localStorage","getItem","saveTokenProvider","setItem","Provider","removeItem","children","document","getElementById"],"mappings":"2RAIaA,G,MAAcC,IAAMC,cAAc,CAC3CC,gBAAgB,WAAD,2BAAE,sBAAAC,EAAA,+EAA8B,GAA9B,yCAAF,kDAAC,GAChBC,UAAU,WAAD,2BAAE,WAAOC,GAAP,SAAAF,EAAA,uFAAF,mDAAC,GACVG,QAAS,gB,gBCJAC,EAAqB,WAAO,IAAD,EACMP,IAAMQ,WADZ,mBAC7BC,EAD6B,KACdC,EADc,OAEJV,IAAMQ,WAFF,mBAE7BG,EAF6B,KAEnBC,EAFmB,OAGJZ,IAAMQ,SAA8C,IAHhD,mBAG7BK,EAH6B,KAGnBC,EAHmB,OAINd,IAAMQ,WAJA,mBAI7BO,EAJ6B,KAIpBC,EAJoB,KAMpChB,IAAMiB,UAAU,WAEZ,IAAMC,EAAQ,YAAOL,GAEjBE,IACAG,EAASC,KAAKJ,GACdD,EAAYI,KAEjB,CAACH,IAEJf,IAAMiB,UAAU,WAEZ,IAAMG,GAAmB,IAAIC,KAA+BC,QAAQ,6CAA6CC,QAGjHH,EAAiBI,GAAG,kBAAmB,SAAUT,EAAiBU,GAC9DC,QAAQC,IAAI,iBAAkBZ,GAC9BW,QAAQC,IAAI,WAAYF,GACxBC,QAAQC,IAAId,GAGZG,EAAW,CAAES,OAAMV,cAIvBK,EAAiBI,GAAG,gBAAiB,WACjCE,QAAQC,IAAI,6BAIhBP,EAAiBQ,QAAQC,MAAM,SAAAC,GAAK,OAAIJ,QAAQI,MAAMA,KAGtDpB,EAAiBU,GAGjB,IAAMK,EAAOM,OAAO,gCACpBnB,EAAYa,IACb,IAkBH,OACI,6BACI,6BACI,wCACA,wBAAIO,GAAG,kBAnBanB,EAASoB,IAAI,SAACC,EAAMC,GAC5C,OAAO,wBAAIC,IAAKD,GAAO,2BAAID,EAAKT,MAAzB,IAAoCS,EAAKnB,aAsBhD,0BAAMsB,OAAO,GAAGC,SAhBH,SAACC,GAClBA,EAAEC,iBAD2B,IAEtBC,EAFsB,YAENF,EAAEG,OAAOC,SAFH,MAG7BjB,QAAQC,IAAI,mBAAoBc,EAAaG,OACzCnC,GACAA,EAAcoC,KAAK,gBAAiBJ,EAAaG,MAAOjC,GAAUmC,KAAK,kBAAML,EAAaG,MAAQ,OAY9F,yBAAKG,UAAU,SACX,2BAAOA,UAAU,SAAjB,WACA,yBAAKA,UAAU,WACX,2BAAOA,UAAU,QAAQC,KAAK,OAAOC,YAAY,qBAAqBxB,KAAK,aAAayB,UAAQ,MAGxG,yBAAKH,UAAU,WACX,4BAAQA,UAAU,qBAAlB,cCtDLI,EApBH,WAAO,IAAD,EACoCnD,IAAMQ,UAAS,GADnD,mBACY4C,GADZ,WAERC,EAAcrD,IAAMsD,WAAWvD,GAE/BwD,EAAY,sCAAG,4BAAApD,EAAA,qEACakD,EAAYnD,kBADzB,OACXA,EADW,OAEjBwB,QAAQC,IAAIzB,GACZkD,EAAqBlD,GAHJ,yCAAH,qDAalB,OANAF,IAAMiB,UAAU,WACZsC,KACD,IAII,kBAAC,EAAD,OClBXC,IAASC,OAAO,kBHIsB,SAACC,GACnC,IAAMC,EAAuB,sCAAG,sBAAAxD,EAAA,iEAGVyD,OAAOC,aAAaC,QAZjB,eASO,0CAKb,GALa,iCAOjB,GAPiB,uCASxBpC,QAAQI,MAAR,MATwB,mBAUjB,GAViB,uDAAH,qDAavBiC,EAAiB,sCAAG,WAAO1D,GAAP,SAAAF,EAAA,qDACtByD,OAAOC,aAAaG,QAvBC,cAuB6B3D,GAD5B,yCAAH,sDAOvB,OAAO,kBAACN,EAAYkE,SAAb,CAAsBrB,MAAO,CAAE1C,gBAAiByD,EAAyBvD,UAAW2D,EAAmBzD,QAHtF,WACpBsD,OAAOC,aAAaK,WA3BC,kBA8BpBR,EAAMS,WG1BC,KAAc,kBAAC,EAAD,OAAwBC,SAASC,eAAe,W","file":"static/js/main.b8f54b61.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst localStorageTokenKey = \"__token_key\";\r\n\r\nexport const AuthContext = React.createContext({\r\n    isAuthenticated: async (): Promise<boolean> => false,\r\n    saveToken: async (token: string): Promise<void> => { },\r\n    signOut: () => { }\r\n})\r\n\r\nexport const AuthProvider: React.FC = (props) => {\r\n    const isAuthenticatedProvider = async (): Promise<boolean> => {\r\n        try {\r\n            // obtener el valor del token del local storage\r\n            const token = window.localStorage.getItem(localStorageTokenKey);\r\n            if (!token) {\r\n                return false;\r\n            }\r\n            return true;\r\n        } catch (error) {\r\n            console.error(error);\r\n            return false;\r\n        }\r\n    }\r\n    const saveTokenProvider = async (token: string) => {\r\n        window.localStorage.setItem(localStorageTokenKey, token);\r\n    }\r\n\r\n    const signOutProvider = () => {\r\n        window.localStorage.removeItem(localStorageTokenKey);\r\n    }\r\n    return <AuthContext.Provider value={{ isAuthenticated: isAuthenticatedProvider, saveToken: saveTokenProvider, signOut: signOutProvider }}>\r\n        {props.children}\r\n    </AuthContext.Provider>\r\n}","import React from \"react\";\r\nimport * as SignalR from \"@aspnet/signalr\";\r\n\r\nexport const ChatView: React.FC = () => {\r\n    const [hubConnection, setHubConnection] = React.useState<SignalR.HubConnection>();\r\n    const [userName, setUserName] = React.useState();\r\n    const [mensajes, setMensajes] = React.useState<{ name: string, mensaje: string }[]>([]);\r\n    const [mensaje, setMensaje] = React.useState<{ name: string, mensaje: string }>();\r\n\r\n    React.useEffect(() => {\r\n        // clonando arreglo            \r\n        const tmpArray = [...mensajes];\r\n        // agregamos un elemento\r\n        if (mensaje) {\r\n            tmpArray.push(mensaje)\r\n            setMensajes(tmpArray)\r\n        }\r\n    }, [mensaje])\r\n\r\n    React.useEffect(() => {\r\n        // instanciar conexión\r\n        const newHubConnection = new SignalR.HubConnectionBuilder().withUrl(\"http://192.168.14.10/CibertecCore/chathub\").build();\r\n\r\n        // el código que se va a ejecutar cuando reciba un nuevo mensaje del hub\r\n        newHubConnection.on(\"mensajeRecibido\", function (mensaje: string, name: string) {\r\n            console.log(\"Nuevo mensaje:\", mensaje);\r\n            console.log(\"Usuario:\", name);\r\n            console.log(mensajes)\r\n\r\n            // console.log(tmpArray);\r\n            setMensaje({ name, mensaje });\r\n        })\r\n\r\n        // el código que se va a ejecutar cuando un usuario se conecte al chat\r\n        newHubConnection.on(\"nuevaConexion\", function () {\r\n            console.log(\"Nuevo usuario conectado\");\r\n        })\r\n\r\n        // inicializar conexión\r\n        newHubConnection.start().catch(error => console.error(error));\r\n\r\n        // guardamos la conexión en el state de nuestro componente react\r\n        setHubConnection(newHubConnection);\r\n\r\n        // mostrar un prompt para pedir el nombre de usuario\r\n        const name = prompt(\"Ingrese un nombre de usuario\");\r\n        setUserName(name);\r\n    }, [])\r\n\r\n    const mostrarMensajes = () => {\r\n        const arregloMensajesView = mensajes.map((item, index) => {\r\n            return <li key={index}><b>{item.name}</b>:{item.mensaje}</li>\r\n        })\r\n\r\n        return arregloMensajesView;\r\n    }\r\n\r\n    const handleSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        const [messageInput] = e.target.elements;\r\n        console.log(\"mensaje a enviar\", messageInput.value);\r\n        if (hubConnection) {\r\n            hubConnection.send(\"enviarMensaje\", messageInput.value, userName).then(() => messageInput.value = \"\");\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h2>Mensajes</h2>\r\n                <ul id=\"lista-mensajes\">\r\n                    {mostrarMensajes()}\r\n                </ul>\r\n            </div>\r\n            <form action=\"\" onSubmit={handleSubmit}>\r\n                <div className=\"field\">\r\n                    <label className=\"label\">Mensaje</label>\r\n                    <div className=\"control\">\r\n                        <input className=\"input\" type=\"text\" placeholder=\"Ingrese un Mensaje\" name=\"supplierId\" required />\r\n                    </div>\r\n                </div>\r\n                <div className=\"control\">\r\n                    <button className=\"button is-primary\">Enviar</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport AuthenticatedApp from \"./AuthenticatedApp\";\r\nimport { AuthContext } from \"./context/AuthContext\";\r\nimport { UnauthenticatedApp } from \"./UnauthenticatedApp\";\r\nimport { ChatView } from \"./components/ChatView\";\r\n\r\nconst App = () => {\r\n    const [userAuthenticated, setUserAuthenticated] = React.useState(false);\r\n    const authContext = React.useContext(AuthContext);\r\n\r\n    const checkSession = async () => {\r\n        const isAuthenticated = await authContext.isAuthenticated();\r\n        console.log(isAuthenticated);\r\n        setUserAuthenticated(isAuthenticated);\r\n    }\r\n\r\n    // para ver si el usuario está autenticado al montar el componente\r\n    React.useEffect(() => {\r\n        checkSession();\r\n    }, [])\r\n\r\n    // return userAuthenticated ? <AuthenticatedApp checkSessionAction={checkSession}></AuthenticatedApp> : <UnauthenticatedApp checkSessionAction={checkSession}></UnauthenticatedApp>;\r\n\r\n    return <ChatView></ChatView>\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {AuthProvider} from \"./context/AuthContext\"\n\nReactDOM.render(<AuthProvider><App /></AuthProvider>, document.getElementById('root'));\n"],"sourceRoot":""}